import Foundation
import OpenAPIKit30
import SwiftSyntax
import SwiftSyntaxBuilder

protocol ComponentRenderer {
    typealias RenderResult = (type: String, content: String)

    func render(key: OpenAPI.ComponentKey, context: inout Context) throws -> RenderResult?
}

// MARK: -

struct SchemaRenderer: ComponentRenderer {
    var schema: JSONSchema

    func render(key: OpenAPI.ComponentKey, context: inout Context) throws -> RenderResult? {
        guard let renderer = context.schemaRenderer(for: schema),
              let (type, content) = try renderer.render(key: key, context: &context),
              !content.isEmpty else {
            return nil
        }

        let source = SourceFileSyntax {
            """
            // autogenerated

            // swiftlint:disable:next blanket_disable_command
            // swiftlint:disable all
            #if compiler(>=6)
            public import Foundation
            #else
            import Foundation
            #endif


            """

            CodeBlockItemListSyntax {
                "\(raw: content)"

                for ext in context.extensions.reversed() {
                    "\n\n\(raw: ext)"
                }
            }
        }
        return (type, source.formatted().description)
    }
}
